buildscript {
	ext {
		springBootVersion = '2.1.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.alexjamesmalcolm'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

test {
    if (System.env["JDBC_DATABASE_URL"] == null) {
    	environment "JDBC_DATABASE_URL", "jdbc:h2:./test"
    }
	if (System.env["GROUPME_ACCESSTOKEN"] == null) {
		environment "GROUPME_ACCESSTOKEN", GROUPME_ACCESSTOKEN
	}
	if (System.env["ROLLBAR_ACCESS_TOKEN"] == null) {
		environment "ROLLBAR_ACCESS_TOKEN", ROLLBAR_ACCESS_TOKEN
	}
	if (System.env["ROLLBAR_ENDPOINT"] == null) {
		environment "ROLLBAR_ENDPOINT", ROLLBAR_ENDPOINT
	}
	if (System.env["ENVIRONMENT"] == null) {
		environment "ENVIRONMENT", ENVIRONMENT
	}
	if (System.env["DISHBOT_CALLBACK"] == null) {
		environment "DISHBOT_CALLBACK", DISHBOT_CALLBACK
	}
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-websocket')
    implementation("org.webjars:webjars-locator-core")
    implementation("org.webjars:sockjs-client:1.0.2")
    implementation("org.webjars:stomp-websocket:2.3.3")
	implementation('org.webjars:vue:2.5.16')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('com.rollbar:rollbar-web:1.2.1')
	runtimeOnly('com.h2database:h2')
	runtimeOnly('org.postgresql:postgresql')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}
